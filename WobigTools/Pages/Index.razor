@page "/"
@using MatBlazor
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity

@inject IMatToaster Toaster
@inject UserManager<IdentityUser> _userManager
@inject RoleManager<IdentityRole> _roleManager

<AuthorizeView Roles="Admin">
    <Authorized>
        <WobigTools.Pages.Administration.DevConsole />
        <br />
        <WobigTools.Pages.Administration.UsersWithoutRoles />
    </Authorized>
</AuthorizeView>
<AuthorizeView>
    <Authorized>
        @if (_userManager.GetRolesAsync(_userManager.GetUserAsync(context.User).Result).Result.Count <= 0)
        {
            <h2 class="horizontal-center">You don't currently have any access</h2>
            <br />
            <br />
            <h4 class="horizontal-center">We'll grant you proper access shortly,</h4>
            <h4 class="horizontal-center">if you are supposed to be here</h4>
        }
        else
        {
            <h2 class="horizontal-center">You have access!</h2>
            <br />
            <br />
            <h4 class="horizontal-center">Feel free to use our tools (that you have access to)</h4>
            <h4 class="horizontal-center">Use the navigation menu on the left or hamburger menu on mobile</h4>
        }
        <br />
        <div class="bottom-border" />
    </Authorized>
    <NotAuthorized>
        <WobigTools.Pages.Auth.NotLoggedIn />
    </NotAuthorized>
</AuthorizeView>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (!Constants.HadFirstWebRequest)
        {
            CoreLogicLib.Standard.Core.InitializeWebTasks(MyHttpContext.AppBaseUrl);
            Constants.HadFirstWebRequest = true;
        }
    }
}
