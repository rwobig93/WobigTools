@page "/Watchers/WatchersList"

@using SharedLib.Dto
@using WobigTools.Models
@using SharedLib.General

<h4>Add New Watcher</h4>
<EditForm Model="@newProduct" OnValidSubmit="@AddWatcher">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <table class="table">
        <tbody>
            <tr><td width="10">Friendly Name:</td><td width="100"><InputText id="friendlyname" DisplayName="Friendly Name" @bind-Value="newProduct.FriendlyName" /></td></tr>
            <tr><td width="10">Page URL:</td><td width="100"><InputText id="pageurl" DisplayName="Page URL" @bind-Value="newProduct.PageURL" /></td></tr>
            <tr><td width="10">Keyword:</td><td width="100"><InputText id="keyword" DisplayName="Keyword" @bind-Value="newProduct.Keyword" /></td></tr>
        </tbody>
    </table>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h3>Watchers List</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Friendly Name</th>
            <th>Enabled</th>
            <th>Keyword</th>
            <th>Alert Interval</th>
            <th>Page URL</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Constants.SavedData.TrackedProducts)
        {
            <tr>
                <td>@product.FriendlyName</td>
                <td>@product.Enabled</td>
                <td>@product.Keyword</td>
                <td>@product.AlertInterval</td>
                <td>@product.PageURL</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private DisplayTrackedProductModel newProduct = new DisplayTrackedProductModel();

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task AddWatcher()
    {
        TrackedProduct p = new TrackedProduct()
        {
            FriendlyName = newProduct.FriendlyName,
            PageURL = newProduct.PageURL,
            Keyword = newProduct.Keyword,
            AlertOnKeywordNotExist = true,
            Enabled = true
        };

        Constants.SavedData.TrackedProducts.Add(p);
        SavedData.Save();

        newProduct = new DisplayTrackedProductModel();
    }
}
